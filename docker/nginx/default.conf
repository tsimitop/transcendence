server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	server_name localhost;

	ssl_certificate /run/secrets/nginx_ssl_certificate;
	ssl_certificate_key /run/secrets/nginx_ssl_certificate_key;
	ssl_protocols TLSv1.3;
	#access_log  /var/log/nginx/host.access.log  main;

	root   /usr/share/nginx/html;

	index  index.html index.htm;

	location / {
		try_files $uri $uri/ /index.html;
	}

	#error_page  404              /404.html;

	# redirect server error pages to the static page /50x.html
	#
	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
			root   /usr/share/nginx/html;
	}

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	#
	#location ~ \.php$ {
	#    proxy_pass   http://127.0.0.1;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#    root           html;
	#    fastcgi_pass   127.0.0.1:9000;
	#    fastcgi_index  index.php;
	#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
	#    include        fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#    deny  all;
	#}

	location /api {
		proxy_pass http://backend:3000;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
		add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
		add_header 'Access-Control-Allow-Credentials' 'true' always;

		if ($request_method = OPTIONS) {
			add_header Access-Control-Allow-Origin "http://localhost:5173";
			add_header Access-Control-Allow-Credentials "true";
			add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
			add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
				return 204;
		}
	}
}

