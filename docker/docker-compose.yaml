services:
  frontend-dev:  # this just builds the frontend and exits again.
    container_name: frontend-dev
    build: ./frontend-dev/.
    image: frontend-dev:latest
    environment:
      - IS_DEVELOPMENT=true
    volumes:
      - ../frontend:/app:delegated
      - frontend_node_deps:/app/node_modules
    ports: # you can access the frontend on http://localhost:5173 for development (it is updated dynamically on changes)
      - "5173:5173"  # requires caddy to run for the proxy to the backend
    networks:
      - ft_transcendence

  backend:
    container_name: backend
    build: ./backend/.
    image: backend:latest
    volumes:
      - ../backend:/app:delegated  # delegated means that the host has only read access to the files while the container is running
      - backend_node_deps:/app/node_modules
    networks:
      - ft_transcendence
    env_file:
      - ../.env # this stores the oauth secrets and stuff

  caddy:
    container_name: caddy
    build: ./caddy/.
    image: caddy-web-server:latest
    volumes:
      - ../frontend/dist:/srv
    ports:  # you can access the frontend on https://localhost:4443
      - "4443:443"  # lets use 4443 as it doesn't need root privileges
      # const CADDY_SERVER in frontend src needs to be set too if port is changed
    networks:
      - ft_transcendence
    depends_on:
      - backend
      - frontend-dev  # it doesn't really wait for it to build the frontend, but i think it should be fine

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge

volumes:  # use volumes for all the node_modules so it doesn't get confusing with the host environment
  frontend_node_deps:
    name: frontend_node_deps
    driver: local
  backend_node_deps:
    name: backend_node_deps
    driver: local